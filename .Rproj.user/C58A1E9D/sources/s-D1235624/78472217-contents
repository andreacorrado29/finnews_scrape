
## version to save images
setwd("/home/ndrecord/Dropbox/COVID")

filename <- paste0('covid_', Sys.Date(), '.csv') # specify file name
file_avail <- list.files()
if(!(filename %in% file_avail)){ # if file doesnt exist
  rm(list = setdiff(ls(), c('filename', 'file_avail')))
  url <- 'https://covid.ourworldindata.org/data/owid-covid-data.csv' # specify url
  download.file(url, filename) # download and write data
  to_rem <- file_avail[grep('covid_2021', file_avail)] # only covid data
  file.remove(to_rem[which(!(to_rem %in% filename))]) # not today data
} 

dat0 <- read.csv(filename)  # read in data
dat0$iso_code <- as.factor(dat0$iso_code)

smooth_line <- function(y, span = .5){
  x <- 1:NROW(y)
  predict(loess(y~x, span = span))
}

## loop over ISO codes
isos <- c('ITA','GBR')#,'ESP')
vars <- c('new_deaths_per_million','new_cases_per_million')#,'hosp_patients_per_million')
for(var_to_look_at in vars){
  for(iso_code in isos){
    
    dat <- dat0[dat0$iso_code == iso_code,]
    
    # extract two years
    dat_20 <- dat[substr(dat$date, 1, 4) == '2020',]
    dat_21 <- dat[substr(dat$date, 1, 4) == '2021',]
    daily <- substr(seq.Date(as.Date('2020-01-01'), as.Date('2020-12-31'), by = 1), 6,10)
    dat_20$daily <- substr(dat_20$date,6, 10)
    dat_21$daily <- substr(dat_21$date,6, 10)
    
    dat_20_red <- dat_20[,c('daily', var_to_look_at)]
    dat_21_red <- dat_21[,c('daily', var_to_look_at)]
    dat_20_21 <- merge(dat_20_red, dat_21_red, by = 'daily', all = TRUE)
    
    # convert into ts
    y20 <- ts(dat_20_21[,paste0(var_to_look_at,'.x')]) 
    y20[1:rev(which(is.na(y20)))[1]] <- 0
    y21 <- ts(dat_20_21[,paste0(var_to_look_at,'.y')]) 
    
    # delete negative values
    y20[y20 < 0] <- 0
    y21[y21 < 0] <- 0
    
    s <- .25
    par(las = 2)
    dim_pic <- 800
    ylim <- range(y20, y21, na.rm = TRUE) # dynamic
    filename <- paste0(iso_code,'_', var_to_look_at,'_',as.character(Sys.Date()),'.jpeg')
    jpeg(file=filename, width = dim_pic*1.1, height = dim_pic)
    plot(y20, lwd = .25, lty = 2, xaxt = 'n', xlab = 'n', ylab = 'n', ylim = ylim)
    lines(y21, lwd = .25, col = 'red', lty = 2)
    lines(smooth_line(y20, span = s), col = 'black')
    lines(smooth_line(y21), col = 'red')
    axis(side = 1, at = 1:nrow(dat_20_21), labels = dat_20_21$daily)
    if(iso_code == 'ITA') abline(v = which(dat_20_21$daily == '06-04'), col = 'blue', lwd = 1/4)
    abline(v = which(dat_20_21$daily == substr(Sys.Date()-14, 6,10)), col = 'red', lwd = 1/4, lty = 2)
    legend('topright', col = c('black','red'), legend = c('2020','2021'), lty = 1, bty = 'n')
    title(paste(var_to_look_at, '2020 vs 2021 in', iso_code))
    dev.off()
    
  }
}

# remove rplot pdf output 
files <- list.files()
if('Rplots.pdf' %in% files) file.remove('Rplots.pdf')

# remove old files no longer updated
files_to_check <- files[substr(files, 1, 4) == paste0(toupper(substr(files, 1, 3)),'_')]
files_to_remove <- files_to_check[!(substr(files_to_check, 1, 3) %in% isos)]
if(length(files_to_remove) > 0) file.remove(files_to_remove)



















